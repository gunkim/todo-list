buildscript {
    ext {
        springBootVersion = '2.2.4.RELEASE'
        mooworkNodeVersion = '1.3.1'
        springManagerVersion = '1.0.9.RELEASE'
        swaggerVersion = '2.9.2'
        jwtVersion = '0.9.1'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${springManagerVersion}"
    id "com.moowork.node" version "${mooworkNodeVersion}"
}

group 'org.simpleboard'
version '1.0'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation group:'org.springframework.boot', name:'spring-boot-starter-data-jpa'
    implementation group:'org.springframework.boot', name:'spring-boot-starter-web'
    runtimeOnly group:'com.h2database', name:'h2'
    testImplementation group:'org.springframework.boot', name:'spring-boot-starter-test'
    testImplementation group: 'junit', name: 'junit'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: "${swaggerVersion}"
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: "${swaggerVersion}"
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: "${jwtVersion}"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security'
    compileOnly group: 'org.projectlombok', name: 'lombok'
    testCompileOnly group: 'org.projectlombok', name: 'lombok'
    annotationProcessor group: 'org.projectlombok', name: 'lombok'
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok'
}
def webappDir = "$projectDir/frontend/my-app"

task appNpmInstall(type: NpmTask) {
    workingDir = file("${webappDir}")
    args = ["run", "build"]
}
task copyWebApp(type: Copy) {
    from 'frontend/my-app/build'
    into "build/resources/main/static"
}
copyWebApp.dependsOn(appNpmInstall)
compileJava.dependsOn(copyWebApp)